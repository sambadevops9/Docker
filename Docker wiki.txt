Docker Arcitecture:
------------------

==> Docker is platfom it is running and shiping the applications and container it is portable.
==> Docker is not having any os. It is using EC2-machine os.
==> Docker is state less. Any time it is deleted.
==> Docker container having only libraries remaining files get from host os.
==> Container is nothing but namespace and control groups to create one process. This process not having connection on another container this is called container.
    we add memory and cpu using control groups.
==> Basically there are having a few kurnal features.That let you isolate process from each other.

==> Docker is container management.container having it only oneapplication it will take requried files from the host os.
	-->It does not have any os.
	-->fast performing.Because of not having os.
	-->It has layerd architecture.

what is vertualization?
--> vertualization means run multiple OS on single physical syastem.
--> vertualization every vm is indipendent.
--> Every vm hav different creduntials
--> VM's are not portable.

"Docker Client" Docker client that we are going to use commands.
"Docker server" That is responsible for creating images,running containers,etc.


How to create container?
--> we create container.we need one image that image pull from repository.
    >> Docker Pull ubuntu:16.04  (Ubuntu is the image name 16.04 is the version) with out image we can't create container.
    
    >> Docker run --rm -it ubuntu:16.04  [Now it's move to the container. If you want move to the outside container Ctrl+PQ].
    >> Inside container Ifconfig,ping,nano,curl not working. So as you are intrest install any packages example.
	-- apt update
	-- apt install -y inputils-ping net-tools wegt nano
    >> After checking Ifconfig,ping www.google.com,curl -s http://google.com,nano "hello"

How to Create container you have image?
>>Docker run --rm -dit --name container1 y3478jh7848 (image ID)

How to Run Container/How to connect container?
    To run container using    >> Docker run --rm -it (image name)
    To connect container      >> Docker exec -it (image name) bash


Create container and change to image and push to Repository?
	we have two ways
		1.create container install update and convert to image and push to docker hub.
		2.create docker file.
    --> we create container.we need one image that image pull from repository.
    >> Docker Pull ubuntu:16.04  (Ubuntu is the image name 16.04 is the version) with out image we can't create container.
    
    >> Docker run --rm -it ubuntu:16.04  [Now it's move to the container. If you want move to the outside container Ctrl+PQ].
    >> Inside container Ifconfig,ping,nano,curl not working. So as you are intrest install any packages example.
	-- apt update
	-- apt install -y inputils-ping net-tools wegt nano
    >> After checking Ifconfig,ping www.google.com,curl -s http://google.com,nano "hello"
 Now Running container to move to image.
    >> Docker ps
    >> Docker commit ofob87dea2bc 6421/ubuntu9:v1
		[ofob87dea2bc---------- this is container ID]
		[6421/ubuntu9-----------we give 6421 is the repositry name and ubuntu9 is the name ofthe image]
		[v1 --------------------this is tag]
    >> Docker images [it shows above created image]
    >> Docker login  [this is login to docker hub]
    >> Docker push 6421/ubuntu9:v1 [now push to repositery .this 6421/ubuntu9 repository is created]



Docker Networks:
	this networks are used to our containers are communicate the this networks. Bridge is the default network we did not give any network in container. this is connected bridge net work.
>> Docker network ls [it show's the list of networks]
>> Docker network inspect Bride [It shows the ip of the bride network and details of the bridge network]
>> Docker network create samba [now it's created samba network]
>> Docker network prune [It is delete the networks not having sinage container]

>> Docker run --rm -dit --name container1 --netwok samba y3478jh7848 (inage id)  [Now samba network is connected with container1]


Docker Volumes:
>> Docker volumes ls [it is checking docker avaliable volumes]
>> Docker volumes create name [it is createing the new volumes]

what is the use of Docker Volumes?
--> In case containers are deleted it stores the data in volumes.When you create the new container we used same volume.
	/var/lib/docker/volumes/[volumename]


>> Docker volume create vol1
>> Docker run --rm -dit --name nginx -v vol1:/var/www/html  ubuntu:16.04 bash [nginx is the container name, vol1 is the volume name, vol1:/var/www/html vol1 is mount to the that path, ubuntu:16.04 image name ]
>> Docker run -it nginx bash [To install inside container nginx]
	--> apt install -y nano
	--> apt update && apt install nginx -y
	>> service --status-all [check nginx service running or not]
	>> service nginx start 
	[now check localhost:8001(you are port)]
	after check --cd /var/www/html
>> docker stop nginx [now container deleted]
>> Docker exec -it nginx service status
>> Docker exec -it nginx service start
>> Docker run --rm -dit --name nginx -p 8001:80 -v vol1:/var/www/html mynginx:v1

----> It is possible to use number of containers using singele volume
----> volumes are requrid to DB server [Because of it's stores the data and freqvently change the data so we need volumes in DB server]
----> Volumes are optional in App server and web server

Difference B/W volumes and Bindmods?
Volumes are managed by Docker.
Bindmods are used to create one folder and add to the container.

>> Docker cp file1 nginx1:/temp/file1 [In the docker copy option is also avaliabe]
>> Docker logs Nginx1


Docker file:
------------
	Daily life we are using this commands in docker file.
1.From 2.LABEL 3.WORKDIR 4.RUN 5.ADD 6.COPY 7.EXPOSE 8.CMD 9.ENTRYPOINT

======
FROM ubuntu:16.04  (install the ubuntu:16.04 image)   
LABEL OWNER="samba"(we given owner name)
LABEL EMAIL="sambasivarao.yarram@gmail.com" (we give the email)
ENV REPO="https://github.com/mavaric202/dockertest1.git" (ENV REPO is the we give the github repository)
RUN apt update \    [RUN is to install requrid files in image]
    && apt install -y nginx net-tools curl unzip wegt git \
    && git clone ${REPO} /tmp/website \
    && cp index.html /var/www/html/index.nginx-debian.html \
    && cp scorekeepr.js /var/www/html \
    && cp style.css /var/www/html
ADD dockertest1.tar.gz /var/www/html \ [add is used to download the remote place files and extract the local files ]
COPY test1.html /var/www/html \ [this is just copy the files]
CMD ["nginx","-g","daemon off;"] (this cmd is execute the after cretion of image)--cmd is the used to overrite the data

=======================

differenc B/W CMD and ENTRYPOINT?
--> CMD is used to ovverite the data.
--> ENTRYPOINT is used to as usel printing the data.Don't overrite.

Docker EXPOSE: It is used internally connect and internaly open the container host.


How to RUN docker file? [https://codefresh.io/docker-tutorial/build-docker-image-dockerfiles/]
==> nano dockerfile [it is used to write the docker file code in dockerfile]
-------->sambasiva@LHLL0001:~/Docker$ docker build -t 6421/dockerfile:v1 .
-------->create one directoty. Inside directory we add dockerfile
==> docker build -t 6421/dockerfile:v1 . [Now build the docker file V1 is the tag(or)version . is importent]
	--> with out -t we are not getting repository names
==> docker images [6421/docker file is created]
==> docker run -rm -dit -p 8001:80 6421/dockerfile:v1 [now container is created]
==> docker run -rm -dit -p 8001:80 6421/dockerfile:v1 /bin/bash [ In case cmd file is ovverite container is not created. so using /bin/bash]

Flow of creating container?
==> Dockerfile--------->Image----------->Container



Docker compose:
---> it is only deploye single machine only.it is not possible to deploye multipule machines.
---> It is used to overcome the manual deployement.
---> It is used only developement purpse only.not usefull in prod envvironment.
This compose is used to yml file:
version 3.7
service:
	vote:
		build:./vote
		command:python app.py
		volumes:
			- ./vote/app
		ports:
			- "8000:80"
		networks:
			- front-tier
			- back-tire
	result:
		same as above one [change the values,,,,,result and vote,worker,redis,db this are containers]
	worker:
	redis:
	db:
volumes:

volumes for database only



Docker swarm:
	How to enable docker swarm:
	---> creating 3 instens
		docker-host 1(master/leader)192.168.0.11
		docker-host-2(worker)192.168.0.12
		docker-host 3(worker)192.168.0.13
	---> first connect to the docker-host 1  [master]
		>>docker swarm init [In case you getting error] use [docker swarm init --advertise-addr 192.168.0.11] this is run only 
			response:
				docker swarm join --token SWMTKN-1-3gqltvwvz40jawg4keahzppm1b7jqp8hqm7xizbz2jkyjoitx5-1qsjn6ms1kh3w0ij0vih1qkcj 192.168.0.11:2377
	--->copy and paste the respones in docker-host-2 and docker-host-3
	---> Check >>docker node ls [In master-host  it's 3 machines are active]
>>Docker network ls [now creating 2 new networks docker_gwbridege and ovrlay] when the initilaze swarm it is creating.
	---> when creatnig service it id defolt connect to overlay(ingress)
	
	-->Docker Demaon is a service it is used to comunicating the above 3 machines (docker swarm join-token worker)
>> docker node pramote docker-host-2 docker-host-3 [this is used to change worker nodes to secound one of the master ]
>> docker node demote docker-host-2 docker-host-3 [this is again go back to the worker]
	--> masters are compalsery 3 to 5 machines
	
what is raft database? (https://docs.docker.com/engine/swarm/raft/)
-->Having the same consistent state across the cluster means that in case of a failure, any Manager node can pick up the tasks and restore the services to a stable state. For example, if the Leader Manager which is responsible for scheduling tasks in the cluster dies unexpectedly, any other Manager can pick up the task of scheduling and re-balance tasks to match the desired state.

>>docker service create --name nginx --publish 8000:80 --replicas 3 6421/newubuntu:V5
----> --replicas 3 [it is the createing the 3 nginx services]
----> 6421/newubuntu:V5 [is the image name]

>> docker service ps nginx [now it's display the running services]
>> docker service rm nginx [now it's remove the running nginx services]
>> docker service scale nginx=3 [now 3 nginx are running. we give 5 it's running 5 nginx's]

----> docker_gwbridege: it is internally connected to the containers [just check in >> docker network ls (docker_gwbridege avaliable in docker networks)]
>>docker service create --name nginx --publish 8000:80 --mode globel 6421/newubuntu:V5
  [we have 3 hosts globel mode it will deploye one container for each host ]

>> docker promote node2 [now it's promote to the leader]
>> docker demote note2 [now it's demoted to tha leader]
